(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{451:function(e,a,t){"use strict";t.r(a);var s=t(2),n=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[t("InitialLetter",[e._v("E")]),e._v("lasticsearch is a well known search solution and AWS offers a "),t("a",{attrs:{href:"https://aws.amazon.com/elasticsearch-service/"}},[e._v("fully-managed service")]),e._v(" for it.")],1),e._v(" The managed service has the exact same API to interact with just like an unmanaged cluster which is great because you can use all the available tooling as it is.\n"),t("p",[e._v("There are a couple of different options when it comes to deploying a business service backed by "),t("a",{attrs:{href:"http://elastic.co/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Elasticsearch"),t("OutboundLink")],1),e._v(". For example,")]),e._v(" "),t("ol",[t("li",[e._v("You can expose the ES endpoint directly so that clients can invoke the ES rest API.")]),e._v(" "),t("li",[e._v("Create a business centric API around ES and expose it as the only way to consume ES service.")])]),e._v(" "),t("p",[e._v("Which approach is better than the other depends on your needs. Additionally, AWS ES offers Kibana to visualize your search data. To protect Kibana from unauthorized access, you can integrate it with Cognito. Once you do that, only authenticated users from your Cognito User Pool will be able to access the Kibana Dashboard.")]),e._v(" "),t("p",[e._v("In my case, I wanted to deploy an ES domain on AWS with lambda and API Gateway in front. And I am using "),t("a",{attrs:{href:"https://www.serverless.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Serverless Framework"),t("OutboundLink")],1),e._v(" to manage my lambda functions. Additionally, I wanted to secure the access to Kibana using Cognito User Pools. When I first started with this, I face a lot of challenges to set up my ES domain in AWS with proper access policies. Merely defining an "),t("a",{attrs:{href:"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-ac.html#es-ac-types-identity",target:"_blank",rel:"noopener noreferrer"}},[e._v("Identity Based Policy"),t("OutboundLink")],1),e._v(" did not work. There is a great article by "),t("a",{attrs:{href:"https://aws.amazon.com/blogs/database/author/handler/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Jon Handler"),t("OutboundLink")],1),e._v(" on "),t("a",{attrs:{href:"https://aws.amazon.com/blogs/database/get-started-with-amazon-elasticsearch-service-use-amazon-cognito-for-kibana-access-control/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Getting started with Elasticsearch and Cognito"),t("OutboundLink")],1),e._v(" which talks about a lot of things in great detail. However, there were still some missing pieces given the limited knowledge I had at the time. This post outlines some of the concepts which may help you understand what makes Elasticsearch access control different than other "),t("a",{attrs:{href:"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("IAM policies"),t("OutboundLink")],1),e._v(" you are used to defining in your "),t("code",[e._v("serverless.yml")]),e._v(".")]),e._v(" "),t("h2",{attrs:{id:"resource-vs-identity-based-policy"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#resource-vs-identity-based-policy"}},[e._v("#")]),e._v(" Resource vs Identity Based Policy")]),e._v(" "),t("p",[e._v("This is one of the most important concepts I think, which you’d have to understand before you configure Elasticsearch Access Policy.")]),e._v(" "),t("p",[e._v("A "),t("a",{attrs:{href:"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-ac.html#es-ac-types-resource",target:"_blank",rel:"noopener noreferrer"}},[t("em",[e._v("Resource Based Policy")]),t("OutboundLink")],1),e._v(" is attached to the resource which you are trying to secure. That means, you have to know upfront "),t("strong",[e._v("who")]),e._v(" can access the resource. The "),t("em",[e._v("who")]),e._v(" may mean many different things depending on what you want to do. For example, you can allow everything under one "),t("a",{attrs:{href:"https://docs.aws.amazon.com/IAM/latest/UserGuide/console_account-alias.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("AWS Account ID"),t("OutboundLink")],1),e._v(" to have access to ES.")]),e._v(" "),t("p",[e._v("An "),t("a",{attrs:{href:"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-ac.html#es-ac-types-identity",target:"_blank",rel:"noopener noreferrer"}},[t("em",[e._v("Identity Based Policy")]),t("OutboundLink")],1),e._v(" is attached to the entity accessing your resource. For example an indexing lambda function to insert data in Elasticsearch.")]),e._v(" "),t("blockquote",[t("p",[e._v("The main difference between the two is that for the "),t("em",[e._v("Resource Based Policy")]),e._v(", you have to plan ahead.")])]),e._v(" "),t("p",[e._v("One of the many ways you can do this is by "),t("a",{attrs:{href:"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("creating an IAM Role"),t("OutboundLink")],1),e._v(", assigning it to your lambda and granting it access in the ES Access Policy. So the policy document may look like the following:")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('{\n  "Version": "2012-10-17",\n  "Statement": [\n    {\n      "Effect": "Allow",\n      "Principal": {\n        "AWS": "arn:aws:sts::400176810461:...ROLE ARN"\n      },\n      "Action": "es:*",\n      "Resource": "arn:aws:es:us-east-1:400176810461:domain/my-es-domain/*"\n    }\n  ]\n}\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br")])]),t("p",[e._v("Notice the "),t("a",{attrs:{href:"https://docs.aws.amazon.com/IAM/latest/UserGuide/intro-structure.html#intro-structure-principal",target:"_blank",rel:"noopener noreferrer"}},[e._v("￼"),t("code",[e._v("Principal")]),e._v("￼"),t("OutboundLink")],1),e._v(" key here. It means that we are specifically telling Elasticsearch to allow all access to everyone who is assigned this role.")]),e._v(" "),t("h2",{attrs:{id:"initial-plan"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#initial-plan"}},[e._v("#")]),e._v(" Initial plan")]),e._v(" "),t("p",[e._v("In my first iteration, I planned this:")]),e._v(" "),t("ol",[t("li",[e._v("Create two separate roles (one for read and other for read and write). The actions in the role don’t matter (I think) because ES will override those.")]),e._v(" "),t("li",[e._v("Add these additional roles to my "),t("code",[e._v("serverless.yml")]),e._v(" and attach it to functions.")])]),e._v(" "),t("p",[e._v("But I couldn’t find a way to keep the default roles which "),t("em",[e._v("Serverless")]),e._v(" creates and add this additional role. So that plan failed.")]),e._v(" "),t("h2",{attrs:{id:"second-iteration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#second-iteration"}},[e._v("#")]),e._v(" Second Iteration")]),e._v(" "),t("p",[e._v("Then I created an access policy in Elasticsearch which allowed access to everything under my account.")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('{\n  "Version": "2012-10-17",\n  "Statement": [\n    {\n      "Effect": "Allow",\n      "Principal": {\n        "AWS": "arn:aws:iam::123456789012:root"\n      },\n      "Action": "es:*",\n      "Resource": "arn:aws:es:us-east-1:400176810461:domain/my-es-domain/*"\n    }\n  ]\n}\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br")])]),t("p",[e._v("But this was still not enough as I kept getting error that the lambda didn’t have access to invoke "),t("code",[e._v("es:HttpGet")]),e._v(".")]),e._v(" "),t("h2",{attrs:{id:"making-it-work-with-serverless"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#making-it-work-with-serverless"}},[e._v("#")]),e._v(" Making it work with Serverless")]),e._v(" "),t("p",[e._v("I finally found the reason why my second attempt failed in the "),t("a",{attrs:{href:"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-ac.html#es-ac-conflict",target:"_blank",rel:"noopener noreferrer"}},[e._v("this section of Identity and Access Management document for Elasticsearch"),t("OutboundLink")],1),e._v(". Essentially, if you have a "),t("em",[e._v("Resource Based Policy")]),e._v(" which allows access to everything under the account, you must also create an "),t("em",[e._v("Identity Based Policy")]),e._v(" for the entity accessing the service. That means, in addition to my second attempt, I also had to configure the "),t("code",[e._v("serverless.yml")]),e._v(" with the following block under "),t("code",[e._v("iamRoleStatements")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("- Effect: Allow\n  Action:\n    - es:*\n  Resource:\n    - arn:aws:es:us-east-1:400176810461:domain/my-es-domain/*\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])]),t("h2",{attrs:{id:"configuring-cognito"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configuring-cognito"}},[e._v("#")]),e._v(" Configuring Cognito")]),e._v(" "),t("p",[e._v("The "),t("a",{attrs:{href:"https://aws.amazon.com/blogs/database/get-started-with-amazon-elasticsearch-service-use-amazon-cognito-for-kibana-access-control/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Getting started with Elasticsearch and Cognito"),t("OutboundLink")],1),e._v(" article mentioned before has a step by step guide to configure Cognito for Kibana. However, I found somethings which didn’t work for me:")]),e._v(" "),t("ol",[t("li",[e._v("I didn’t see the need for checking “Enable access to unauthenticated identities”. Because I don’t fully understand the "),t("a",{attrs:{href:"https://docs.aws.amazon.com/cognito/latest/developerguide/identity-pools.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Cognito Identity Pools"),t("OutboundLink")],1),e._v(" yet, this seemed dangerous. The permissions that you assign to the "),t("code",[e._v("Unauth_Role")]),e._v(" don’t matter to ES because the ES access policy supersedes. This is only needed (I think) if you want to create a dashboard in Kibana which is accessible without authentication.")]),e._v(" "),t("li",[e._v("If you follow the steps in “Change the Principal to the ARN for the assumed Auth role.”, it will allow Kibana access to only the Identity Pool users. You can always add additional role here but then you may run into the same problem as my attempt 1 about how to assign this extra role to your lambda.")])]),e._v(" "),t("h2",{attrs:{id:"summary"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#summary"}},[e._v("#")]),e._v(" Summary")]),e._v(" "),t("ol",[t("li",[e._v("Create an access policy with a "),t("em",[e._v("Principal")]),e._v(" value which allows everything under your account to access Elasticsearch.")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('{\n  "Version": "2012-10-17",\n  "Statement": [\n    {\n      "Effect": "Allow",\n      "Principal": {\n        "AWS": "arn:aws:iam::123456789012:root"\n      },\n      "Action": "es:*",\n      "Resource": "arn:aws:es:us-east-1:400176810461:domain/my-es-domain/*"\n    }\n  ]\n}\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br")])]),t("ol",{attrs:{start:"2"}},[t("li",[e._v("Assign necessary permissions to your lambda in the "),t("code",[e._v("serverless.yml")]),e._v(".")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("- Effect: Allow\n  Action:\n    - es:*\n  Resource:\n    - arn:aws:es:us-east-1:400176810461:domain/my-es-domain/*\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])])])}),[],!1,null,null,null);a.default=n.exports}}]);